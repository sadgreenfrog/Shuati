## 658. Find K Closest Elements

https://leetcode.com/problems/find-k-closest-elements/

My solution:

```python
class Solution:
    def findClosestElements(self, arr: List[int], k: int, x: int) -> List[int]:
        # Binary Search + Sliding Window
        if k == len(arr): return arr
        pos = self.binarysearch(arr, x)
        l = pos
        r = pos 
        # Sliding window
        while r - l < k:
            if l == 0: 
                return arr[:k]
            if r == len(arr):
                return arr[-k:]
            
            if abs(x - arr[l-1]) <= abs(arr[r] - x):
                l -= 1
            else:
                r += 1
        return arr[l:r]
        
    # The out put is the most close position 
    def binarysearch(self, arr, x):
        l = 0
        r = len(arr)-1
        while l <= r:
            mid = (l+r) // 2
            if arr[mid] > x:
                r = mid - 1
            elif arr[mid] < x:
                l = mid + 1
            else:
                return mid
        return r + 1
```

## 解题思路和想法
Intuitive method: Use bianry search to find out the most clost index, then sliding window to ensure the array interval.

Difficulty: When we initialize l, r = index-1, index. It can't go through edge case when index == 0. So we should define the edge cases first then can
start normal process.
